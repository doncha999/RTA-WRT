name: Generate OpenWrt Config Matrix

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily build
  push:
    branches:
      - main

env:
  REPO_URL_OPENWRT: https://github.com/openwrt/openwrt
  REPO_URL_LEDE: https://github.com/coolsnowwolf/lede
  REPO_URL_IMMORTALWRT: https://github.com/immortalwrt/immortalwrt
  TZ: Asia/Jakarta
  VERSI_OPENWRT: 'openwrt-24.10'
  VERSI_LEDE: 'master'
  VERSI_IMMORTALWRT: 'openwrt-24.10'

jobs:
  generate_matrix:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        source: ['openwrt', 'lede', 'immortalwrt']
        target: ['x86_64', 'armsr-armv8', 'bcm27xx_bcm2710', 'bcm27xx_bcm2711']
      fail-fast: false
      max-parallel: 2

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          build-essential clang flex bison g++ gawk \
          gcc-multilib g++-multilib gettext git \
          libncurses5-dev libncursesw5-dev libssl-dev \
          python3-setuptools python3-dev python3-distutils python3-pyelftools \
          rsync swig unzip zlib1g-dev file wget zstd shfmt jq curl || exit 1
        pip3 install --upgrade pip setuptools || exit 1
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code (${{ matrix.source }})
      working-directory: /workdir
      run: |
        df -hT $PWD
        case "${{ matrix.source }}" in
          "openwrt")
            REPO_URL=$REPO_URL_OPENWRT
            VERSI=$VERSI_OPENWRT
            ;;
          "lede")
            REPO_URL=$REPO_URL_LEDE
            VERSI=$VERSI_LEDE
            ;;
          "immortalwrt")
            REPO_URL=$REPO_URL_IMMORTALWRT
            VERSI=$VERSI_IMMORTALWRT
            ;;
        esac
        git clone $REPO_URL -b $VERSI openwrt_${{ matrix.source }}_$VERSI
        ln -sf /workdir/openwrt_${{ matrix.source }}_$VERSI $GITHUB_WORKSPACE/openwrt

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Generate config (${{ matrix.target }})
      run: |
        cd openwrt
        
        # Set target
        TARGET="${{ matrix.target }}"
        case "$TARGET" in
          "x86_64")
            echo "CONFIG_TARGET_x86=y" >> .config
            echo "CONFIG_TARGET_x86_64=y" >> .config
            echo "CONFIG_TARGET_x86_64_DEVICE_generic=y" >> .config
            ;;
          "armsr-armv8")
            echo "CONFIG_TARGET_armsr=y" >> .config
            echo "CONFIG_TARGET_armsr_armv8=y" >> .config
            ;;
          "bcm27xx_bcm2710")
            echo "CONFIG_TARGET_bcm27xx=y" >> .config
            echo "CONFIG_TARGET_bcm27xx_bcm2710=y" >> .config
            ;;
          "bcm27xx_bcm2711")
            echo "CONFIG_TARGET_bcm27xx=y" >> .config
            echo "CONFIG_TARGET_bcm27xx_bcm2711=y" >> .config
            ;;
        esac
        
        # Generate default configuration
        make defconfig
        
        # Get current version based on source
        case "${{ matrix.source }}" in
          "openwrt")
            CURRENT_VERSI=$VERSI_OPENWRT
            ;;
          "lede")
            CURRENT_VERSI=$VERSI_LEDE
            ;;
          "immortalwrt")
            CURRENT_VERSI=$VERSI_IMMORTALWRT
            ;;
        esac
        
        # Create configs directory
        CFG_DIR="$GITHUB_WORKSPACE/configs/${{ matrix.source }}/$CURRENT_VERSI"
        mkdir -p "$CFG_DIR"
        
        # Copy generated config
        cp .config "$CFG_DIR/${{ matrix.target }}.config"
        
        # Generate device list
        make kernel_menuconfig CONFIG_TARGET=subtarget 2>/dev/null || true
        grep "CONFIG_TARGET.*DEVICE.*=y" .config | sed 's/CONFIG_TARGET_.*_DEVICE_//g' | sed 's/=y//g' > "$CFG_DIR/${{ matrix.target }}_devices.txt" || true

    - name: Upload config artifacts
      uses: actions/upload-artifact@v4
      run: |
        # Get current version based on source
        case "${{ matrix.source }}" in
          "openwrt")
            CURRENT_VERSI=$VERSI_OPENWRT
            ;;
          "lede")
            CURRENT_VERSI=$VERSI_LEDE
            ;;
          "immortalwrt")
            CURRENT_VERSI=$VERSI_IMMORTALWRT
            ;;
        esac
        
        # Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: configs-${{ matrix.source }}-$CURRENT_VERSI-${{ matrix.target }}
          path: configs/${{ matrix.source }}/$CURRENT_VERSI/

  commit_changes:
    runs-on: ubuntu-22.04
    needs: generate_matrix
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: configs-*
        merge-multiple: true
        
    - name: Move configs to root
      run: |
        mkdir -p configs
        find artifacts -name '*.config' -exec cp --parents {} configs/ \;
        find artifacts -name '*_devices.txt' -exec cp --parents {} configs/ \;
        rm -rf artifacts

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add configs/
        if git diff-index --quiet HEAD --; then
          echo "No changes to commit"
        else
          git commit -m "Matrix update: Configs for all sources and branches"
          git push
        fi